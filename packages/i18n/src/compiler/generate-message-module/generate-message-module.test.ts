import dedent from 'dedent';
import { test, expect } from 'vitest';

import { createSourceMessage } from '$tests/utils';

import { generateMessageModule } from '.';

const js = dedent;
const langs = ['vi', 'en'];

test('no message should return empty string', () => {
	expect(generateMessageModule([], langs)).toBe('');
});

test('can generate module with only simple message', () => {
	const messages = [createSourceMessage('greeting', 'Hello, world!')];
	const mod = generateMessageModule(messages, langs);
	expect(mod).toEqual(js`
		/**
		 * DO NOT EDIT! This file is generated by @sveltevietnam/i18n */

		import { createMessageSimple } from "@sveltevietnam/i18n/factory";

		import * as en from "./en.js";
		import * as vi from "./vi.js";

		const _greeting = /*@__PURE__*/ createMessageSimple("greeting", {
		    "en": en["greeting"],
		    "vi": vi["greeting"]
		})
		export { _greeting as "greeting" };\n
	`);
});

test('can generate module with only with-params message', () => {
	const messages = [createSourceMessage('farewell', 'Goodbye {{name}}')];
	const mod = generateMessageModule(messages, langs);
	expect(mod).toEqual(js`
		/**
		 * DO NOT EDIT! This file is generated by @sveltevietnam/i18n */

		import { createMessageWithParams } from "@sveltevietnam/i18n/factory";

		import * as en from "./en.js";
		import * as vi from "./vi.js";

		const _farewell = /*@__PURE__*/ createMessageWithParams("farewell", {
		    "en": en["farewell"],
		    "vi": vi["farewell"]
		})
		export { _farewell as "farewell" };\n
	`);
});

test('can generate module with all types of message', () => {
	const messages = [
		createSourceMessage('greeting', 'Hello, world!'),
		createSourceMessage('farewell', 'Goodbye {{name}}'),
	];
	const mod = generateMessageModule(messages, langs);
	expect(mod).toEqual(js`
		/**
		 * DO NOT EDIT! This file is generated by @sveltevietnam/i18n */

		import { createMessageSimple, createMessageWithParams } from "@sveltevietnam/i18n/factory";

		import * as en from "./en.js";
		import * as vi from "./vi.js";

		const _greeting = /*@__PURE__*/ createMessageSimple("greeting", {
		    "en": en["greeting"],
		    "vi": vi["greeting"]
		})
		const _farewell = /*@__PURE__*/ createMessageWithParams("farewell", {
		    "en": en["farewell"],
		    "vi": vi["farewell"]
		})
		export { _greeting as "greeting", _farewell as "farewell" };\n
	`);
});

test('can generate module for lang with subtag', () => {
	const messages = [createSourceMessage('greeting', 'Hello, world!')];
	const mod = generateMessageModule(messages, ['en-US', 'en-GB', 'vi']);
	expect(mod).toEqual(js`
		/**
		 * DO NOT EDIT! This file is generated by @sveltevietnam/i18n */

		import { createMessageSimple } from "@sveltevietnam/i18n/factory";

		import * as en_GB from "./en-GB.js";
		import * as en_US from "./en-US.js";
		import * as vi from "./vi.js";

		const _greeting = /*@__PURE__*/ createMessageSimple("greeting", {
		    "en-GB": en_GB["greeting"],
		    "en-US": en_US["greeting"],
		    "vi": vi["greeting"]
		})
		export { _greeting as "greeting" };\n
	`);
});
