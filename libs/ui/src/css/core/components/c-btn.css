/* FIXME `:has` is enough, but Firefox has not yet added support for `:has`. When they do, please remove `.c-btn--with-icon` site-wide */
@custom-selector :--with-icon :has(:is(img, svg)), .c-btn--with-icon;
@custom-selector :--default :not(.c-btn--outlined, .c-btn--pop), .c-btn--default;
@custom-selector :--pop .c-btn--pop;
@custom-selector :--outlined .c-btn--outlined;
@custom-selector :--loading [data-loading]:not([data-loading='false']);
@custom-selector :--disabled [disabled]:not([disabled='false']);

.c-btn {
	display: grid;
	column-gap: 8px;
	align-items: center;
	justify-content: center;

	min-height: theme('spacing.10');
	padding: theme('spacing.2') theme('spacing.4');

	&:disabled {
		cursor: not-allowed;
		background-color: theme('colors.bg.200');
	}

	&:where(:--with-icon) {
		grid-template-columns: auto auto;
	}

	&:where(:not(:--with-icon)) {
		text-align: center;
	}

	&:where(:--default) {
		color: theme('colors.bg.DEFAULT');
		white-space: nowrap;
		background-color: theme('colors.fg.DEFAULT');
		transition: background-color 250ms theme('transitionTimingFunction.DEFAULT');

		&:hover:where(:not(:--disabled)) {
			background-color: theme('colors.fg.100');
		}

		&:active {
			background-color: theme('colors.fg.200');
		}
	}

	&:where(:--pop) {
		background-color: theme('colors.bg.DEFAULT');
		border: 1px solid currentcolor;
		box-shadow: 4px 4px theme('colors.fg.DEFAULT');

		transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
		transition-duration: 180ms;
		transition-property: box-shadow, transform;

		&:hover:where(:not(:--disabled)) {
			transform: translate(-2px, -2px);
			box-shadow: 6px 6px theme('colors.fg.DEFAULT');
		}

		&:active {
			transform: translate(0, 0);
			box-shadow: 4px 4px theme('colors.fg.DEFAULT');
		}
	}

	&:where(:--outlined) {
		background-color: theme('colors.bg.DEFAULT');
		border: 1px solid theme('colors.fg.DEFAULT');
		transition: background-color 250ms theme('transitionTimingFunction.DEFAULT');

		&:hover:where(:not(:--disabled)) {
			background-color: theme('colors.bg.100');
		}

		&:active {
			background-color: theme('colors.bg.200');
		}
	}

	&:where(:--loading) {
		position: relative;
		overflow: hidden;

		&::before {
			content: '';
			position: absolute;
			inset: 0;
			backdrop-filter: blur(4px);
		}

		&::after {
			@apply c-loader;

			content: '';

			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
		}
	}
}
