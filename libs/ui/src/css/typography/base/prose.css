@custom-selector :--is-prose :not(:where([class~='not-prose'], [class~='not-prose'] *));

.prose {
	& figcaption:--is-prose {
		text-align: center;
	}

	& figure:--is-prose {
		margin-block: 40px;
	}

	& iframe:--is-prose {
		max-width: 100%;
		margin-inline: auto;
		border: 1px solid theme('colors.outline.DEFAULT');
	}

	& a:--is-prose {
		&:where(:not(.heading-anchor)) {
			@apply c-link;

			text-decoration: none;
		}

		&:where(.heading-anchor) {
			position: absolute;
			top: 0;
			right: 100%;
			bottom: 0;

			margin-right: 2px;

			font-weight: inherit;
			text-decoration: none;

			opacity: 0;

			transition: opacity 200ms theme('transitionTimingFunction.DEFAULT');

			@screen tb {
				margin-right: 8px;
			}
		}
	}

	& :is(h2, h3, h4, h5, h6) {
		position: relative;

		&:hover :where(.heading-anchor) {
			opacity: 1;
		}
	}

	& :not(pre) > :where(code):--is-prose {
		padding: 0.25em 0.375em;

		font-weight: 400;

		background-color: theme('colors.bg.200'); /* fallback if color-mix is not support */
		background-color: color-mix(in hsl, theme('colors.fg.200'), transparent 95%);
		border: 1px solid;
		border-color: transparent; /* fallback if color-mix is not support */
		border-color: color-mix(in hsl, theme('colors.fg.DEFAULT'), transparent 80%);
		border-radius: 0.375rem;

		&::after,
		&::before {
			content: none;
		}
	}

	/*
		Assume shikijs integration,
		emitting :where to take precedence over @tailwindcss/typography defautls
	*/
	& pre:--is-prose {
		padding-inline: 0;

		& :where(code) {
			display: inline-block;
			min-width: 100%;
		}

		& :where(.line) {
			--padding-inline-start: 1ch;
			--padding-inline-end: 3ch;

			display: inline-block;
			width: 100%;
			padding-inline-start: var(--padding-inline-start);
			padding-inline-end: var(--padding-inline-end);

			&::before {
				content: attr(data-line);

				display: inline-block;

				width: 4ch;
				margin-right: 3ch;

				font-variant-numeric: tabular-nums;
				color: currentcolor;
				text-align: right;

				opacity: 0.5;
			}

			&:where([data-line-diff]) {
				display: inline-block;
				width: 100%;

				&::after {
					position: absolute;
					left: 1ch;
					display: inline-block;
				}

				&:where([data-line-diff='+']) {
					background-color: hsl(123.04deg 36.07% 42.94% / 15%);

					&::after {
						content: '+';
					}
				}

				&:where([data-line-diff='-']) {
					background-color: hsl(3.12deg 74.76% 59.61% / 10%);

					&::after {
						content: '-';
					}
				}
			}

			&:where([data-line-highlighted]) {
				display: inline-block;
				width: 100%;

				&:where([data-line-highlighted='info']) {
					background-color: hsl(215deg 39% 18%);
				}

				&:where([data-line-highlighted='success']) {
					background-color: hsl(123deg 36% 43% / 15%);
				}

				&:where([data-line-highlighted='warning']) {
					background-color: hsl(43deg 100% 50% / 15%);
				}

				&:where([data-line-highlighted='error']) {
					background-color: hsl(3.12deg 74.76% 59.61% / 10%);
				}
			}
		}
	}
}
