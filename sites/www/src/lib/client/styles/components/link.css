@custom-selector :--preserved .c-link--preserved;
@custom-selector :--lazy .c-link--lazy;
@custom-selector :--box .c-link--box;
@custom-selector :--__icon :is(img, svg); /* nested icon within c-link */
@custom-selector :--icon :is(.c-link--icon, :has(:--__icon));
@custom-selector :--image .c-link--image;

.c-link {
	--link-active-color: theme('colors.link.DEFAULT');

	/*
		Links that are a box, on hover a background layer swipe from left to right.
		For example:

		```html
		<a class="c-link c-link--box" href={SOCIAL_LINKS.DISCORD} external>
			<span>{t.ctas.discord}</span>
			<svg inline-src="icon/external-link" />
		</a>
		```
	*/
	&:where(:--box) {
		--transition-duration: 300ms;

		position: relative;

		display: flex;
		align-items: center;
		justify-content: space-between;

		padding: 16px 0;

		&::before {
			content: '';

			position: absolute;
			inset: 0;
			transform-origin: left;
			transform: scaleX(0);

			opacity: 0;
			background-color: currentcolor;

			transition-timing-function: ease-in-out;
			transition-duration: var(--transition-duration);
			transition-property: opacity, transform;
		}

		& span,
		& svg {
			transition-timing-function: ease-in-out;
			transition-duration: var(--transition-duration);
			transition-property: transform, filter;
		}

		&:hover {
			&::before {
				transform: scaleX(1);
				opacity: 1;
			}

			& span,
			& svg {
				filter: invert(100%);
			}

			& span {
				transform: translateX(12px);
			}

			& svg {
				transform: translateX(-12px);
			}
		}
	}

	/*
		Thumbnails as links. For example:

		```html
		<a {href} class="c-link c-link--image">
			<enhanced:img src={tPost.thumbnail} alt={tPost.title} />
		</a>
		```
	*/
	&:where(:--image) {
		position: relative;
		overflow: hidden;
		display: inline-block;

		:where(& img) {
			width: 100%;
			max-width: 100%;
			height: auto;

			object-fit: cover;
			object-position: center;

			transition: transform 400ms ease-out;
		}

		:where(&:hover img) {
			transform: scale(1.05);
		}
	}

	/*
		Links that are just icon and no text. For example:

		```html
		<a href={SOCIAL_LINKS.GITHUB} class="c-link c-link--icon" external>
			<svg height="16" width="16" inline-src="simpleicon/github" />
		</a>
		```
	*/
	&:where(:--icon:not(:--box, :--image)),
	/*
		Links that inherit color from parent and on hover change to "colors.link",
		also have no underline effect. Often seen in breadcrumbs and footer links. For example:

		```html
		<a {href} class="c-link c-link--lazy">Home</a>
		```
	*/
	&:where(:--lazy) {
		transition: color 400ms ease-out;

		&:hover,
		&[aria-current]:not([aria-current='false']) {
			color: var(--link-active-color);
		}

		& svg {
			fill: currentcolor;
		}
	}

	&:where(:not(:--icon, :--lazy, :--image, :--box)) {
		--underline-color: currentcolor;

		will-change: background-size;

		display: inline;

		background-image: linear-gradient(to right, var(--underline-color), var(--underline-color));
		background-repeat: no-repeat;
		background-position: left bottom;

		transition: color 250ms ease-in-out;

		&:where(:not(:--preserved)) {
			color: var(--link-active-color);
			background-size: 100% var(--underline-height, 1px);

			&:hover {
				animation: underline-swipe 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) 0s;
			}
		}

		/*
			links that inherit color from parent, only change to "colors.link" on hover,
			often used in title of item cards
		*/
		&:where(:--preserved) {
			--transition-duration: 500ms;

			background-position: left bottom;
			background-size: 0 var(--underline-height, 1px);

			transition-timing-function: ease-in-out;
			transition-duration: calc(0.75 * var(--transition-duration)), var(--transition-duration);
			transition-property: color, background-size;

			&:--current,
			&:hover {
				color: var(--link-active-color);
				background-size: 100% var(--underline-height, 1px);
			}
		}
	}
}

@keyframes underline-swipe {
	0% {
		background-position: right bottom;
		background-size: 100% var(--underline-height, 1px);
	}

	50% {
		background-position: right bottom;
		background-size: 0 var(--underline-height, 1px);
	}

	51% {
		background-position: left bottom;
		background-size: 0 var(--underline-height, 1px);
	}

	100% {
		background-position: left bottom;
		background-size: 100% var(--underline-height, 1px);
	}
}

/* contextual color shifts */
.c-callout a {
	--link-active-color: theme('colors.orange.800');

	@dark {
		--link-active-color: theme('colors.orange.300');
	}
}
