name: Unit Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - 'internals/utils/**'
      - '**/vitest.config.js'
      - '.github/workflows/unit_tests.yaml'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      utils: ${{ steps.filter.outputs.utils }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            utils:
              - 'internals/utils/**.js'
              - '.github/workflows/unit_tests.yaml'

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
        continue-on-error: false

  utils:
    runs-on: ubuntu-latest
    needs: [changes, setup]
    if: ${{ needs.changes.outputs.utils == 'true' || (github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Get pnpm cache
        uses: actions/cache@v3
        with:
          path: '${{ env.STORE_PATH }}'
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
        continue-on-error: false

        # TODO: improve with `vitest latest` for only changed files
      - name: Run unit tests
        run: pnpm test:ci --filter=@internals/utils
        continue-on-error: false

        # TODO: simplify report steps with https://github.com/davelosert/vitest-coverage-report-action
      - name: Code coverage
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: internals/utils/coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          thresholds: '80 90'
          output: both
          indicators: true

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: '@internals/utils'
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          path: code-coverage-results.md
